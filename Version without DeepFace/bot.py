import os
import cv2
import random
import mediapipe as mp
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QVBoxLayout, QWidget
from PyQt5.QtCore import QTimer, Qt, QRect
from PyQt5.QtGui import QImage, QPixmap, QPainter, QPen, QFont

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Mediapipe –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä—É–∫
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(
    static_image_mode=False,          # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞, –∞ –Ω–µ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    max_num_hands=2,                  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    min_detection_confidence=0.5,     # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ä—É–∫–∏
    min_tracking_confidence=0.5       # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä—É–∫–∏
)
mp_drawing = mp.solutions.drawing_utils  # –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–µ–∫

class Emoji:
    """
    –ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —ç–º–æ–¥–∑–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–∑–∏—Ü–∏–µ–π, —Å–∫–æ—Ä–æ—Å—Ç—å—é, –≤—Ä–∞—â–µ–Ω–∏–µ–º –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —ç–º–æ–¥–∑–∏.
    """
    def __init__(self, x, y, emoji):
        self.x = x  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X —ç–º–æ–¥–∑–∏
        self.y = y  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y —ç–º–æ–¥–∑–∏
        self.emoji = emoji  # –°–∏–º–≤–æ–ª —ç–º–æ–¥–∑–∏
        self.vx = random.uniform(-2, 2)  # –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ X
        self.vy = 0  # –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ Y
        self.radius = 30  # –†–∞–¥–∏—É—Å —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–ª–∏–∑–∏–π
        self.angle = 0  # –¢–µ–∫—É—â–∏–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ —ç–º–æ–¥–∑–∏
        self.angular_velocity = random.uniform(-5, 5)  # –°–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
        self.burst = False  # –§–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∑—Ä—ã–≤–∞ —ç–º–æ–¥–∑–∏
        self.burst_time = 0  # –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∑—Ä—ã–≤–∞

    def update(self, gravity=0.5, width=800, height=600):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–º–æ–¥–∑–∏: –ø–æ–∑–∏—Ü–∏—é, —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –∫—Ä–∞—è–º–∏.
        
        :param gravity: –°–∏–ª–∞ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏, –≤–ª–∏—è—é—â–∞—è –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ Y.
        :param width: –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        :param height: –í—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        """
        if not self.burst:
            self.vy += gravity  # –ü—Ä–∏–º–µ–Ω—è–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –∫ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
            self.x += self.vx    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–æ –æ—Å–∏ X
            self.y += self.vy    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–æ –æ—Å–∏ Y
            self.angle += self.angular_velocity  # –û–±–Ω–æ–≤–ª—è–µ–º —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –∫—Ä–∞—è–º–∏ –æ–∫–Ω–∞
            if self.x - self.radius < 0 or self.x + self.radius > width or self.y + self.radius > height:
                self.burst = True       # –ü–æ–º–µ—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∑—Ä—ã–≤–∞
                self.burst_time = 10    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –≤–∑—Ä—ã–≤–∞ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)
        else:
            self.burst_time -= 1  # –£–º–µ–Ω—å—à–∞–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –≤–∑—Ä—ã–≤–∞

    def draw(self, painter):
        """
        –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —ç–º–æ–¥–∑–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.
        
        :param painter: –û–±—ä–µ–∫—Ç QPainter –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è.
        """
        if not self.burst:
            painter.save()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ painter
            painter.translate(int(self.x), int(self.y))  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∫ –ø–æ–∑–∏—Ü–∏–∏ —ç–º–æ–¥–∑–∏
            painter.rotate(self.angle)  # –í—Ä–∞—â–∞–µ–º —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π —É–≥–æ–ª
            rect = QRect(-self.radius, -self.radius, self.radius * 2, self.radius * 2)  # –°–æ–∑–¥–∞—ë–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è —ç–º–æ–¥–∑–∏
            painter.drawText(rect, Qt.AlignCenter, self.emoji)  # –†–∏—Å—É–µ–º —ç–º–æ–¥–∑–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
            painter.restore()  # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ painter
        elif self.burst_time > 0:
            # –†–∏—Å—É–µ–º –≤–∑—Ä—ã–≤ –≤–º–µ—Å—Ç–æ —ç–º–æ–¥–∑–∏
            painter.setPen(QPen(Qt.yellow, 3, Qt.SolidLine))  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∂—ë–ª—Ç—ã–π —Ü–≤–µ—Ç –∏ —Ç–æ–ª—â–∏–Ω—É –ø–µ—Ä–∞
            painter.setFont(QFont("Arial", 24))  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç –¥–ª—è –≤–∑—Ä—ã–≤–∞
            rect = QRect(int(self.x - self.radius), int(self.y - self.radius), self.radius * 2, self.radius * 2)
            painter.drawText(rect, Qt.AlignCenter, "üí•")  # –†–∏—Å—É–µ–º —Å–∏–º–≤–æ–ª –≤–∑—Ä—ã–≤–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞

    def is_colliding_with_hand(self, landmarks, width, height):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è –ª–∏ —ç–º–æ–¥–∑–∏ —Å –ª—é–±–æ–π —Ç–æ—á–∫–æ–π —Ä—É–∫–∏.
        
        :param landmarks: –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–µ–∫ (landmarks) —Ä—É–∫–∏.
        :param width: –®–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
        :param height: –í—ã—Å–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
        :return: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è –∏–ª–∏ None, –µ—Å–ª–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è –Ω–µ—Ç.
        """
        for lm in landmarks:
            hand_x = int(lm.x * width)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X —Ä—É–∫–∏ –≤ –ø–∏–∫—Å–µ–ª–∏
            hand_y = int(lm.y * height)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã Y —Ä—É–∫–∏ –≤ –ø–∏–∫—Å–µ–ª–∏
            distance = ((self.x - hand_x) ** 2 + (self.y - hand_y) ** 2) ** 0.5  # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ç–æ—á–∫–∏ —Ä—É–∫–∏
            if distance < self.radius + 20:  # 20 –ø–∏–∫—Å–µ–ª–µ–π ‚Äî –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å —Ä—É–∫–∏
                return (hand_x, hand_y)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
        return None  # –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è –Ω–µ—Ç

class EmojiGameApp(QMainWindow):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —ç–º–æ–¥–∑–∏ —Å —Ä—É–∫–∞–º–∏.
    """
    def __init__(self):
        super().__init__()

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.setWindowTitle("Emoji Game App")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
        self.setGeometry(100, 100, 800, 600)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.video_label = QLabel(self)  # –°–æ–∑–¥–∞—ë–º QLabel –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∏–¥–µ–æ
        self.video_label.setScaledContents(True)  # –†–∞–∑—Ä–µ—à–∞–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ QLabel
        layout = QVBoxLayout()  # –°–æ–∑–¥–∞—ë–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
        layout.addWidget(self.video_label)  # –î–æ–±–∞–≤–ª—è–µ–º QLabel –≤ layout
        container = QWidget()  # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è layout
        container.setLayout(layout)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º layout –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        self.setCentralWidget(container)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–∫ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –æ–∫–Ω–∞

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—Ö–≤–∞—Ç–∞ –≤–∏–¥–µ–æ —Å –∫–∞–º–µ—Ä—ã
        self.cap = cv2.VideoCapture(0)  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–∫–∞–º–µ—Ä—É (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 0)
        self.timer = QTimer(self)  # –°–æ–∑–¥–∞—ë–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–¥—Ä–æ–≤
        self.timer.timeout.connect(self.update_frame)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–¥—Ä–æ–≤ –∫ —Å–∏–≥–Ω–∞–ª—É —Ç–∞–π–º–µ—Ä–∞
        self.timer.start(30)  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 30 –º—Å (–ø—Ä–∏–º–µ—Ä–Ω–æ 33 –∫–∞–¥—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥—É)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–º–æ–¥–∑–∏
        self.emojis = ["üòÄ", "‚ú®", "üéâ", "‚ù§Ô∏è", "üî•"]  # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —ç–º–æ–¥–∑–∏
        self.emoji_list = []  # –°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö —ç–º–æ–¥–∑–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ

    def update_frame(self):
        """
        –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π —Ç–∞–π–º–µ—Ä–æ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–¥—Ä–∞ –≤–∏–¥–µ–æ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —ç–º–æ–¥–∑–∏.
        """
        ret, frame = self.cap.read()  # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–∞–¥—Ä —Å –∫–∞–º–µ—Ä—ã
        if not ret:
            return  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –∫–∞–¥—Ä, –≤—ã—Ö–æ–¥–∏–º –∏–∑ –º–µ—Ç–æ–¥–∞

        # –£–±–∏—Ä–∞–µ–º –∑–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        frame = cv2.flip(frame, 1)

        # "–û—Ç–¥–∞–ª–µ–Ω–∏–µ" –∫–∞–º–µ—Ä—ã: –¥–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        scale = 1.5  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        h, w, _ = frame.shape  # –ü–æ–ª—É—á–∞–µ–º –≤—ã—Å–æ—Ç—É –∏ —à–∏—Ä–∏–Ω—É –∫–∞–¥—Ä–∞
        new_h, new_w = int(h * scale), int(w * scale)  # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã

        # –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å —á—ë—Ä–Ω—ã–º–∏ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏
        padded_frame = cv2.copyMakeBorder(
            frame, 
            top=(new_h - h) // 2, 
            bottom=(new_h - h) // 2, 
            left=(new_w - w) // 2, 
            right=(new_w - w) // 2, 
            borderType=cv2.BORDER_CONSTANT, 
            value=(0, 0, 0)  # –ß—ë—Ä–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –≥—Ä–∞–Ω–∏—Ü
        )

        # –û–±—Ä–µ–∑–∞–µ–º –¥–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        frame = padded_frame[
            (new_h - h) // 2 : (new_h + h) // 2, 
            (new_w - w) // 2 : (new_w + w) // 2
        ]

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–¥—Ä–∞ —Å –ø–æ–º–æ—â—å—é Mediapipe
        image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É –∏–∑ BGR –≤ RGB
        results = hands.process(image)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ä—É–∫

        height, width, _ = image.shape  # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        # –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —ç–º–æ–¥–∑–∏
        if random.random() < 0.05:  # –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 5% –Ω–∞ –∫–∞–∂–¥–æ–º –∫–∞–¥—Ä–µ
            emoji_x = random.randint(30, width - 30)  # –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è X —Å –æ—Ç—Å—Ç—É–ø–æ–º 30 –ø–∏–∫—Å–µ–ª–µ–π –æ—Ç –∫—Ä–∞—ë–≤
            emoji_y = 30  # –ü–æ–∑–∏—Ü–∏—è Y —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 30 –ø–∏–∫—Å–µ–ª–µ–π –æ—Ç –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫—Ä–∞—è
            emoji = Emoji(emoji_x, emoji_y, random.choice(self.emojis))  # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Emoji
            self.emoji_list.append(emoji)  # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ —Å–ø–∏—Å–æ–∫
            print(f"–°–æ–∑–¥–∞–Ω–æ —ç–º–æ–¥–∑–∏ '{emoji.emoji}' –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ ({emoji.x}, {emoji.y})")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –≤—Å–µ—Ö —ç–º–æ–¥–∑–∏
        for emoji in self.emoji_list:
            emoji.update(gravity=0.5, width=width, height=height)  # –ü—Ä–∏–º–µ–Ω—è–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ä—É–∫
        if results.multi_hand_landmarks and results.multi_handedness:
            for hand_landmarks, handedness in zip(results.multi_hand_landmarks, results.multi_handedness):
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä—É–∫–∞ –ª–µ–≤–æ–π –∏–ª–∏ –ø—Ä–∞–≤–æ–π
                hand_label = handedness.classification[0].label  # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∫—É 'Left' –∏–ª–∏ 'Right'
                is_left = hand_label == 'Left'  # –§–ª–∞–≥ –¥–ª—è –ª–µ–≤–æ–π —Ä—É–∫–∏

                # –í—ã–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ä—É–∫–∏
                if is_left:
                    hand_color = (0, 255, 0)  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –ª–µ–≤–æ–π —Ä—É–∫–∏
                else:
                    hand_color = (255, 0, 0)  # –°–∏–Ω–∏–π —Ü–≤–µ—Ç –¥–ª—è –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏

                # –†–∏—Å—É–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏ –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Ä—É–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                mp_drawing.draw_landmarks(
                    image,
                    hand_landmarks,
                    mp_hands.HAND_CONNECTIONS,
                    mp_drawing.DrawingSpec(color=hand_color, thickness=2, circle_radius=2),  # –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–µ–∫
                    mp_drawing.DrawingSpec(color=hand_color, thickness=2)  # –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
                )

                landmarks = hand_landmarks.landmark  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–µ–∫ —Ä—É–∫–∏

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —ç–º–æ–¥–∑–∏ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–µ–π —Ä—É–∫–æ–π
                for emoji in self.emoji_list:
                    if emoji.burst:
                        continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–º–æ–¥–∑–∏, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–∑—Ä—ã–≤–∞

                    collision_point = emoji.is_colliding_with_hand(landmarks, width, height)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ
                    if collision_point:
                        ex, ey = emoji.x, emoji.y  # –¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è —ç–º–æ–¥–∑–∏
                        hx, hy = collision_point  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
                        dx = ex - hx  # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ –æ—Å–∏ X
                        dy = ey - hy  # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ –æ—Å–∏ Y
                        distance = (dx ** 2 + dy ** 2) ** 0.5  # –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ç–æ—á–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
                        if distance == 0:
                            distance = 1  # –ò–∑–±–µ–≥–∞–µ–º –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
                        # –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä –æ—Ç —Ç–æ—á–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è –∫ —ç–º–æ–¥–∑–∏
                        nx = dx / distance
                        ny = dy / distance

                        if is_left:
                            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ª–µ–≤–æ–π —Ä—É–∫–æ–π (–ø—Ä–∏—Ç—è–≥–∏–≤–∞–Ω–∏–µ –∫ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–º—É –ø–∞–ª—å—Ü—É)
                            fingertip_x = int(landmarks[8].x * width)  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X –∫–æ–Ω—á–∏–∫–∞ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–ª—å—Ü–∞
                            fingertip_y = int(landmarks[8].y * height)  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y –∫–æ–Ω—á–∏–∫–∞ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–ª—å—Ü–∞
                            
                            # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –ø–æ–∑–∏—Ü–∏–µ–π —ç–º–æ–¥–∑–∏ –∏ –ø–∞–ª—å—Ü–∞
                            dx = emoji.x - fingertip_x
                            dy = emoji.y - fingertip_y
                            distance = (dx ** 2 + dy ** 2) ** 0.5  # –ù–æ–≤–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ

                            if distance > 5:  # –ï—Å–ª–∏ —ç–º–æ–¥–∑–∏ –Ω–µ —Å–æ–≤—Å–µ–º –Ω–∞ –ø–∞–ª—å—Ü–µ, –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ–º –µ–≥–æ
                                force = 0.5  # –°–∏–ª–∞ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏—è
                                emoji.vx -= (dx / distance) * force  # –ò–∑–º–µ–Ω—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ X
                                emoji.vy -= (dy / distance) * force  # –ò–∑–º–µ–Ω—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ Y
                            else:
                                # –£–¥–µ—Ä–∂–∏–≤–∞–µ–º —ç–º–æ–¥–∑–∏ –Ω–∞ –∫–æ–Ω—á–∏–∫–µ –ø–∞–ª—å—Ü–∞
                                emoji.vx = 0
                                emoji.vy = 0
                                emoji.x = fingertip_x
                                emoji.y = fingertip_y

                            # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–æ—Å–∫–∞ —ç–º–æ–¥–∑–∏, —É—á–∏—Ç—ã–≤–∞—è –¥–≤–∏–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞
                            if hasattr(emoji, "prev_position"):
                                prev_fingertip_x, prev_fingertip_y = emoji.prev_position  # –ü—Ä–µ–¥—ã–¥—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–∞–ª—å—Ü–∞
                                delta_x = fingertip_x - prev_fingertip_x  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –æ—Å–∏ X
                                delta_y = fingertip_y - prev_fingertip_y  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –æ—Å–∏ Y
                                
                                # –ï—Å–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞ —Ä–µ–∑–∫–æ–µ, –æ—Ç–ø—É—Å–∫–∞–µ–º —ç–º–æ–¥–∑–∏
                                if abs(delta_x) > 10 or abs(delta_y) > 10:  # –ü–æ—Ä–æ–≥ –¥–ª—è –±—Ä–æ—Å–∫–∞
                                    emoji.vx = delta_x * 0.3  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞ –≤ —Å–∫–æ—Ä–æ—Å—Ç—å —ç–º–æ–¥–∑–∏ –ø–æ –æ—Å–∏ X
                                    emoji.vy = delta_y * 0.3  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞ –≤ —Å–∫–æ—Ä–æ—Å—Ç—å —ç–º–æ–¥–∑–∏ –ø–æ –æ—Å–∏ Y
                                    print(f"–ë—Ä–æ—Å–æ–∫ —ç–º–æ–¥–∑–∏ '{emoji.emoji}'!")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

                            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø–∞–ª—å—Ü–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
                            emoji.prev_position = (fingertip_x, fingertip_y)

                        else:
                            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–∞–≤–æ–π —Ä—É–∫–æ–π (–æ—Ç—Ç–∞–ª–∫–∏–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏)
                            force = 5.0  # –°–∏–ª–∞ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–Ω–∏—è
                            emoji.vx += nx * force  # –ò–∑–º–µ–Ω—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ X
                            emoji.vy += ny * force  # –ò–∑–º–µ–Ω—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –æ—Å–∏ Y
                            print(f"–≠–º–æ–¥–∑–∏ '{emoji.emoji}' –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ ({hx}, {hy})")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

        # –£–¥–∞–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—à–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞ –∏–ª–∏ –∏–º–µ—é—Ç –æ—á–µ–Ω—å –Ω–∏–∑–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
        self.emoji_list = [
            emoji for emoji in self.emoji_list
            if not (emoji.burst and emoji.burst_time <= 0)  # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–∑—Ä—ã–≤–∞
            and 0 <= emoji.y - emoji.radius <= height + 100  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —ç–º–æ–¥–∑–∏ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö –ø–æ Y
            and 0 <= emoji.x - emoji.radius <= width + 100    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —ç–º–æ–¥–∑–∏ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö –ø–æ X
            and not (abs(emoji.vx) < 0.1 and abs(emoji.vy) < 0.1 and emoji.y >= height - emoji.radius)  # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ —Å –æ—á–µ–Ω—å –Ω–∏–∑–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è —É –Ω–∏–∂–Ω–µ–≥–æ –∫—Ä–∞—è
        ]

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ PyQt
        q_image = QImage(image.data, image.shape[1], image.shape[0], QImage.Format_RGB888)  # –°–æ–∑–¥–∞—ë–º QImage –∏–∑ –º–∞—Å—Å–∏–≤–∞ –¥–∞–Ω–Ω—ã—Ö
        pixmap = QPixmap.fromImage(q_image)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º QImage –≤ QPixmap –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —ç–º–æ–¥–∑–∏ –ø–æ–≤–µ—Ä—Ö –≤–∏–¥–µ–æ
        painter = QPainter(pixmap)  # –°–æ–∑–¥–∞—ë–º QPainter –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ QPixmap
        painter.setPen(QPen(Qt.red, 2, Qt.SolidLine))  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –ø–µ—Ä–∞ –∏ —Ç–æ–ª—â–∏–Ω—É –ª–∏–Ω–∏–∏
        painter.setFont(QFont("Arial", 32))  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç –¥–ª—è —ç–º–æ–¥–∑–∏
        for emoji in self.emoji_list:
            emoji.draw(painter)  # –†–∏—Å—É–µ–º –∫–∞–∂–¥–æ–µ —ç–º–æ–¥–∑–∏
        painter.end()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∏—Å–æ–≤–∞–Ω–∏–µ

        self.video_label.setPixmap(pixmap)  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ QLabel

    def closeEvent(self, event):
        """
        –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞.
        –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –∫–∞–º–µ—Ä—ã.
        """
        self.cap.release()  # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∑–∞—Ö–≤–∞—Ç –∫–∞–º–µ—Ä—ã
        super().closeEvent(event)  # –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥

if __name__ == "__main__":
    app = QApplication([])  # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ PyQt
    window = EmojiGameApp()  # –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    window.showFullScreen()  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–∫–Ω–æ –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
    app.exec_()  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
